#include <windows.h>https://github.com/beener7/computer_G/blob/main/Bezier
#include <math.h>
#include <gl/gl.h>
#include <gl/glut.h> // (or others, depending on the system in use)

#define		Window_Width	800
#define		Window_Height	800

int			point[100][2];
int			num = 0;
int			piece = 100;


int factorial(int num) {
	int value = 0;
	if (num <= 1) {
		return 1;
	}
	else {
		value *= factorial(num - 1);
		return value;
	}
}

float binorm(int n,int i)
{
	float value;
	value = factorial(n) / factorial(n - i) * factorial(i);
	return value;
}

float caul(int n,int i,float time)
{
	float answer;

	answer = binorm(n,i) * pow(1.0 - time, n - i) * pow(time, i);

	return answer;
}



void Draw_Bezier_Curve(void) {

	int degree;
	float time;

	glColor3f(1.0, 1.0, 1.0);
	
	degree = num - 1;
	time = 1.0 / piece;

	glBegin(GL_LINE_STRIP);

	for(float a = 0.0; a<=1.0; a += time)
	{
		float sumx = 0.0;
		float sumy = 0.0;

		for(int i = 0 ; i<= degree; i++)
		{
			float value = caul(degree,i,time);
			sumx += value * point[i][0];
			sumy += value * point[i][1];
		}

		glVertex2f(sumx, sumy);
	}

	glEnd();


}
void Draw_Control_Points(void) {

	glPointSize(5.0);
	glColor3f(1.0, 0.0, 0.0);
	glBegin(GL_POINTS);
	for (int k = 0; k < num; k++) {
		glVertex2f(point[k][0], point[k][1]);
	}
	glEnd();

}

void RenderScene(void) {
	glClear(GL_COLOR_BUFFER_BIT);
	glClearColor(0.0, 0.0, 0.0, 1.0);

	glColor3f(1.0, 0.0, 0.0);

	if (num >= 1)
		Draw_Control_Points();
	if (num >= 2)
		Draw_Bezier_Curve();

	glFlush();
	glutSwapBuffers();
}
void init(void) {
	glClearColor(0.0, 0.0, 0.0, 0.0);

	glMatrixMode(GL_PROJECTION); // Set projection parameters.
	glLoadIdentity();
	gluOrtho2D(0, Window_Width, 0, Window_Height);
}

void mouse(int button, int state, int x, int y) {
	if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN) {
		point[num][0] = x;
		point[num][1] = Window_Height - y;
		num++;
	}
	if (button == GLUT_RIGHT_BUTTON && state == GLUT_DOWN) {
		num = 0;
	}
	glutPostRedisplay();
	RenderScene();
}


int main(int argc, char** argv) {
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
	glutInitWindowPosition(100, 100);
	glutInitWindowSize(Window_Width, Window_Height);
	glutCreateWindow("Bezier Curve");
	init();
	glutDisplayFunc(RenderScene);
	glutMouseFunc(mouse);
	glutMainLoop();
	return 0;
}
